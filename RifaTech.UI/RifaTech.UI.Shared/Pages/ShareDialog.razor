@using MudBlazor
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudText Class="mb-4">Compartilhe esta rifa com seus amigos:</MudText>

        <MudTextField @bind-Value="RifaLink"
                      Label="Link da Rifa"
                      ReadOnly="true"
                      Adornment="Adornment.End"
                      AdornmentIcon="@Icons.Material.Filled.ContentCopy"
                      OnAdornmentClick="CopyToClipboard"
                      Class="mb-4" />

        <MudGrid>
            <MudItem xs="3">
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           OnClick="@(() => ShareVia("whatsapp"))"
                           FullWidth="true"
                           Class="pa-2">
                    <MudIcon Icon="@Icons.Custom.Brands.WhatsApp" />
                </MudButton>
            </MudItem>

            <MudItem xs="3">
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           OnClick="@(() => ShareVia("facebook"))"
                           FullWidth="true"
                           Class="pa-2">
                    <MudIcon Icon="@Icons.Custom.Brands.Facebook" />
                </MudButton>
            </MudItem>

            <MudItem xs="3">
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           OnClick="@(() => ShareVia("twitter"))"
                           FullWidth="true"
                           Class="pa-2">
                    <MudIcon Icon="@Icons.Custom.Brands.Twitter" />
                </MudButton>
            </MudItem>

            <MudItem xs="3">
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           OnClick="@(() => ShareVia("email"))"
                           FullWidth="true"
                           Class="pa-2">
                    <MudIcon Icon="@Icons.Material.Filled.Email" />
                </MudButton>
            </MudItem>
        </MudGrid>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Close">Fechar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public Guid RifaId { get; set; }
    [Parameter] public string RifaNome { get; set; }
    [Parameter] public string RifaLink { get; set; }

    private bool _isRendered = false;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            _isRendered = true;
        }
    }

    private async Task CopyToClipboard()
    {
        if (!_isRendered) return;

        try
        {
            await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", RifaLink);
            Snackbar.Add("Link copiado para a área de transferência!", Severity.Success);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Não foi possível copiar o link: {ex.Message}", Severity.Error);
        }
    }

    private async Task ShareVia(string platform)
    {
        if (!_isRendered) return;

        try
        {
            string url = "";
            string message = $"Confira esta rifa no RifaTech: {RifaNome}";

            switch (platform)
            {
                case "whatsapp":
                    url = $"https://wa.me/?text={Uri.EscapeDataString(message + " " + RifaLink)}";
                    break;
                case "facebook":
                    url = $"https://www.facebook.com/sharer/sharer.php?u={Uri.EscapeDataString(RifaLink)}";
                    break;
                case "twitter":
                    url = $"https://twitter.com/intent/tweet?text={Uri.EscapeDataString(message)}&url={Uri.EscapeDataString(RifaLink)}";
                    break;
                case "email":
                    url = $"mailto:?subject={Uri.EscapeDataString("Rifa: " + RifaNome)}&body={Uri.EscapeDataString(message + "\n\n" + RifaLink)}";
                    break;
                default:
                    Snackbar.Add("Plataforma de compartilhamento não suportada", Severity.Error);
                    return;
            }

            await JSRuntime.InvokeVoidAsync("open", url, "_blank");
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erro ao compartilhar: {ex.Message}", Severity.Error);
        }
    }

    private void Close() => MudDialog.Close();
}